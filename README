. Terminologies
  . Widget:	tabs, grid, button, ...
  . Component: modele/handler
  . Function: model.method(), lib.method()

. Architecture

  . Tiers

                         +--------------------------+
                         |  UI (Pages, Web Service) |
                         +--------------------------+
                                     ||
                                 Controller
                                     ||
          ++------------------++-----++----------------------------++
          ||   Bean-1         ||   Bean-2                          ||   Bean-n 
    ......||..........  ......||..........       ...         ......||..........
    .     ||         .  .     ||         .                   .     ||         .
    .   Model---View .  .   Model---View .       ...         .   Model---View .
    .     ||         .  .     ||         .                   .     ||         .
    .   Library      .  .   Library      .       ...         .   Library      .
    .     ||         .  .     ||         .                   .     ||         .
    .  Database      .  .  Database      .       ...         .  Database      .
    ..................  ..................                   ..................


  . W3S Bean

          Component  ........ Visual Layer (Model/Method with views)
             ||
          Library    ........ Logic Layer (Business Support Functions)
             ||
          Database   ........ Data Layer (DBMS)

  . File Hirachy
    . system --+-- core --+-- core.class.php,controller.class.php,bean.class.php
               |          |
               |          +-- db ---- dao.class.php,mysql.class.php,oracle.class.php,...
               |
               +-- app --+-- conf -- main.ini,user.domain.ini
                         |
                         +-- beans --+-- bean1 --+-- lib.class.php, model.class.php, README
                         |           |           |
                         |           +-- bean2   +-- database -- db.sql, tbl.ini
                         |           |...        |
                         |           +-- beanN   +-- handler -- component1,...,componentN (logic inc & ajax-view tpl)
                         |                       |
                         |                       +-- view -- Complex-component-page1.tpl.php,...,Complex-component-pageN.tpl.php
                         |                       |
                         |                       +-- sub-bean1 --+-- lib.class.php, model.class.php
                         |                                       |
                         |                                       +-- database -- db.sql, db.tbl.ini
                         |
                         +-- resource --+-- beans --+-- bean1 --+-- README
                                                    |           |
                                                    |           +-- lib.class.php,model.class.php
                                                    |           |
                                                    |           +-- handler -- component1,...,componentN (logic inc & ajax-view tpl)
                                                    |           |
                                                    |           +-- view -- single-component-page1.tpl.php,...,single-component-pageN.tpl.php
                                                    |           |
                                                    |           +-- database -- db.sql (for database definitions), db.tbl.ini (for table access)
                                                    +-- bean2   |
                                                    +-- ...     +-- sub-lib11 --+-- lib.class.php
                                                    +-- beanN                   +-- database -- db.sql, db.tbl.ini

          * beans in resource folder will not be accessable until installed (symbol link or copy) under folder app/beans. 

    . Others
      . themes --+-- core --+-- README
                 |          |
                 |          +-- css
                 |          |
                 |          +-- js
                 |          |
                 |          +-- pattern (color pattern, optional) --+-- pattern1
                 |          |                                       |...
                 |          +-- docs                                +-- patternN
                 |
                 +-- theme1 --+-- README
                 |            |
                 +-- theme2   +-- css,js,docs,pattern
                 |...         |
                 +-- themeN   +-- *.tpl.php (templates with configrable component containers)

      . user-upload --+--d1 (d+domain_id, for multiple-domain support cms only) --+-- images
                      |                                                           |
                      +--d2                                                       +-- files
                      |...                                                        ...
                      +--dN
                      |
                      +--u1 (u+user_dna, for user stuff like book,blog,...) --+-- images
                      |                                                       |
                      +--u2                                                   +-- files
                      ...

  . Controller: Mapping client request (URL) to component <model, handler, parameters>, and deliver content to client.
  . W3S Bean
    . library
    . model
    . view
  . Model	Application-Oriented
    . Integration (Business Logic) of Libraries
    . Implement of library frontware
    . Wrapping (UI) of Data with View
    . Access Control Factor:
      . Model Access:
        . Only models which has an entry in model folder app/model/ can be accessable.
        . All directly model access via controller must be verified with access configure base. model_verify()
        . Domain restricted if there is entry in domain section in main.ini domain_verify()
      . Component Access:
        . Configuration
        . Inner security:	session, category, dna, ..., etc
  . View:  Layout/view in UI.
  . Library	Business-Oriented
    . OO Business Entity	e.g. AclUser, AccountingBookkeeping
    . Hirachy Strutucture
    . DB Support
    . Interface for Model Invoke
    . Only visiable in Model

. Access Control
  . Domain Access
    . Domain In User Account
      Domain user belongs to (user domain)
    . Domain In User Group
      Domain user account belongs to (access domain)
  . Component Access (SimplyPHP Scope)
    . Operator:	Operator Verification:	Open without operator check & Protected with operator check
    . Action:	Context Token verify
    . Object:	Operator related content filter
  . Page Access (CMS Scope)
    . URL
    . Component in page
  . Web Services(API) Access

. Scope
  . Every application entity should be an object and mapped as a lib class. e.g. AclUser, Bookkeeping

. Naming Rules and Address Map
  . ClassName:	LibFolder1Folder2Folder3
  . Address:	lib/folder1/folder2/folder3/folder3.class.php
    Notice: 
    . hook	lib will be hooked under model's lib hook, call like: $this->lib->libClassNameWithoutLibHeaderOrGivenNameDefinedInDependencies
    . name	class in php is case insensitive, but name in hook and autoload class is case sensitive.

. Invoke & Security
  . Library can be invoked locally in model or other library only. Cannot be invoked remotely (via internet)
  . The access controled by caller which is be truested (e.g. Model), so Model dsigner has responsibilty to implement security policy in Model.

. Frontware 	Since library is working at back end only. You need UI component and functions in the model to access and maintain the database in library.
                We call those stuff "Frontware" of library. For example, pfa/user and pfa.access_control() is Frontware for AclUser in Pfa.

. Error Handle
  . return bool false
  . status = array('error_code'=>ERR_CODE,'error'=>ERR_MESSAGE)

. Debug Support
  . Goal: 
    . Tell developer where and what the error happened.
    . Error can be Traced back
  . Types
    . Database debug info
    . Script debug info

Library Interface Definition
. database 	tbl_ini
  . Relative name: e.g. 'cms' in LibCms Class, means folder: lib/cms/database/cms.tbl.ini
  . Full name:	e.g. 	LibAcl:acl => lib/acl/database/acl.tbl.ini
. method
. error
  . returns false
  . status[error_code]	code
  . status[error]		message
. DB Initializing (optional)
  . db_initial($param)
  . initial.inc.php (optional, for case of big initial code block)
. Data exchange between model and library: $this->env()
  . DOMAIN	(Global Var)
  . URL		(Global Var)
  . operator	(Session)
  . others		(Session)

. Session Solutions for load-balance
  . IP-based load dispatching (e.g. ip_hash in nginx reverse proxy)
  . Database (TODO)
  . Memcached (TODO)

